{"version":3,"sources":["components/Navigation.jsx","components/Field.jsx","components/Button.jsx","components/ManipulationPanel.jsx","utils/index.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","length","difficulty","onChangeDifficulty","upVisibility","downVisibilitiy","className","onClick","Field","fields","map","row","column","Button","status","onStart","onStop","onRestart","ManipulationPanel","onChange","icon","faArrowLeft","faArrowUp","faArrowDown","faArrowRight","getFoodPosition","fileSize","excludes","x","Math","floor","random","y","some","item","initFields","fieldSize","snake","i","cols","Array","fill","push","food","initalPosition","initialValues","Difficulty","GameStatus","Object","freeze","init","playing","suspended","gameover","Direction","up","right","left","down","DirectionkeyCodeMap","37","38","39","40","OppositeDirection","Delta","timer","undefined","unsubscribe","clearInterval","App","useState","setFields","body","setBody","setStatus","direction","setDirection","setDifficulty","tick","setTick","useEffect","setInterval","handleMoving","OnChangeDirection","useCallback","newDirection","handlekeyDown","e","keyCode","document","addEventListener","removeEventListener","position","delta","newPosition","isEatingMyself","newBody","removingTrack","pop","unshift","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.55bb9196.chunk.js","sourcesContent":["const Navigation = ({ length, difficulty = 3, onChangeDifficulty }) => {\n    const upVisibility = difficulty < 5 ? '' : 'is-hidden'\n    const downVisibilitiy = difficulty > 1 ? '' : 'is-hidden'\n    const onUpDifficulty = () => onChangeDifficulty(difficulty + 1)\n    const onDownDifficulty = () => onChangeDifficulty(difficulty - 1)\n    return (\n        <div className=\"navigation\">\n            <div className=\"navigation-item\">\n                <span className=\"navigation-label\">Length:</span>\n                <div className=\"navigation-item-number-cotainer\">\n                    <div className=\"num-board\">{length}</div>\n                </div>\n            </div>\n            <div className=\"navigation-item\">\n                <span className=\"navigation-lable\">Difficulty:</span>\n                <div className=\"navigation-item-number-container\">\n                    <span className=\"num-board\">{difficulty}</span>\n                    <div className=\"difficulty-button-container\">\n                        <div\n                            className={`difficulty-button difficulty-up${upVisibility}`}\n                            onClick={onUpDifficulty}></div>\n                        <div\n                            className={`difficulty-button difficulty-down${downVisibilitiy}`}\n                            onClick={onDownDifficulty}\n                        ></div>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default Navigation;","const Field = ({ fields }) => {\n    return (\n        <div className=\"field\">\n            {\n                fields.map((row) => {\n                    return row.map((column) => {\n                        return <div className={`dots ${column}`}></div>\n                    })\n                })\n            }\n        </div>\n    )\n}\n\nexport default Field;","const Button = ({ status, onStart, onStop, onRestart }) => {\n    return (\n        <div className=\"button\">\n            {status === \"gameover\" && <button className=\"btn btn-gameover\" onClick={onRestart}>gameover</button>}\n            {status === \"init\" && <button className=\"btn btn-init\" onClick={onStart}>start</button>}\n            {status === \"suspended\" && <button className=\"btn btn-suspended\" onClick={onStart}>start</button>}\n            {status === \"playing\" && < button className=\"btn btn-playing\" onClick={onStop}>stop</button>}\n        </div >\n    );\n};\n\nexport default Button;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n    faArrowLeft,\n    faArrowUp,\n    faArrowDown,\n    faArrowRight\n} from '@fortawesome/free-solid-svg-icons'\n\nconst ManipulationPanel = ({ onChange }) => {\n    const onUp = () => onChange('up')\n    const onRight = () => onChange('right')\n    const onLeft = () => onChange('left')\n    const onDown = () => onChange('down')\n\n\n    return (\n        <div className=\"manipulation-panel\">\n            <button className=\"manipulation-btn btn btn-left\" onClick={onLeft}>\n                <FontAwesomeIcon icon={faArrowLeft} />\n            </button>\n            <div>\n                <button className=\"manipulation-btn btn btn-up\" onClick={onUp}>\n                    <FontAwesomeIcon icon={faArrowUp} />\n                </button>\n                <button className=\"manipulation-btn btn btn-down\" onClick={onDown}>\n                    <FontAwesomeIcon icon={faArrowDown} />\n                </button>\n            </div>\n            <button className=\"manipulation-btn btn btn-rifht\" onClick={onRight}>\n                <FontAwesomeIcon icon={faArrowRight} />\n            </button>\n        </div>\n    );\n};\n\nexport default ManipulationPanel;","\nexport const getFoodPosition = (fileSize, excludes) => {\n    while (true) {\n        const x = Math.floor(Math.random() * (fileSize - 1 - 1)) + 1;\n        const y = Math.floor(Math.random() * (fileSize - 1 - 1)) + 1;\n        const conflict = excludes.some(item => item.x === x && item.y === y)\n\n        if (!conflict) {\n            return { x, y };\n        }\n    }\n}\nexport const initFields = (fieldSize, snake,) => {\n    const fields = []\n    for (let i = 0; i < fieldSize; i++) {\n        const cols = new Array(fieldSize).fill('')\n        fields.push(cols)\n    }\n    fields[snake.y][snake.x] = 'snake'\n\n    const food = getFoodPosition(fieldSize, [snake])\n    fields[food.y][food.x] = 'food'\n\n    return fields\n}","\nimport React, { useCallback, useEffect, useState } from 'react'\nimport Navigation from './components/Navigation';\nimport Field from './components/Field';\nimport Button from './components/Button';\nimport ManipulationPanel from './components/ManipulationPanel';\nimport { initFields, getFoodPosition } from './utils';\n\n\n\nconst initalPosition = { x: 17, y: 17 }\nconst initialValues = initFields(35, initalPosition)\nconst defaultInterval = 100\nconst defaultDifficulty = 3\n\nconst Difficulty = [1000, 500, 100, 50, 10]\n\nconst GameStatus = Object.freeze({\n  init: 'init',\n  playing: 'playing',\n  suspended: 'suspended',\n  gameover: 'gameover'\n})\n\n\nconst Direction = Object.freeze({\n  up: 'up',\n  right: 'right',\n  left: 'left',\n  down: 'down',\n})\n\nconst DirectionkeyCodeMap = Object.freeze({\n  37: Direction.left,\n  38: Direction.up,\n  39: Direction.right,\n  40: Direction.down\n})\n\nconst OppositeDirection = Object.freeze({\n  up: 'down',\n  right: 'left',\n  left: 'right',\n  down: 'up',\n})\n\nconst Delta = Object.freeze({\n  up: { x: 0, y: -1 },\n  right: { x: 1, y: 0 },\n  left: { x: -1, y: 0 },\n  down: { x: 0, y: 1 }\n})\n\nlet timer = undefined\n\nconst unsubscribe = () => {\n  if (!timer) {\n    return\n  }\n  clearInterval(timer)\n}\n\nconst isCollision = (fileSize, position) => {\n  if (position.y < 0 || position.x < 0) {\n    return true;\n  }\n  if (position.y > fileSize - 1 || position.x > fileSize - 1) {\n    return true;\n  }\n  return false;\n};\n\nconst isEatingMyself = (fields, position) => {\n  return fields[position.y][position.x] === 'snake'\n}\n\nfunction App() {\n  const [fields, setFields] = useState(initialValues)\n  const [body, setBody] = useState([])\n  const [status, setStatus] = useState(GameStatus.init)\n  const [direction, setDirection] = useState(Direction.up)\n  const [difficulty, setDifficulty] = useState(defaultDifficulty)\n  const [tick, setTick] = useState(0)\n\n  useEffect(() => {\n    setBody([initalPosition])\n    const interval = Difficulty[difficulty - 1]\n    timer = setInterval(() => {\n      setTick(tick => tick + 1)\n    }, interval)\n    return unsubscribe\n  }, [difficulty])\n\n  useEffect(() => {\n    if (body.length === 0 || status !== GameStatus.playing) {\n      return\n    }\n    const canContinue = handleMoving()\n    if (!canContinue) {\n      unsubscribe()\n      setStatus(GameStatus.gameover)\n    }\n  }, [tick])\n\n  const onStart = () => setStatus(GameStatus.playing)\n\n  const onStop = () => setStatus(GameStatus.suspended)\n\n  const onRestart = () => {\n    timer = setInterval(() => {\n      setTick(tick => tick + 1)\n    }, defaultInterval)\n    setDirection(Direction.up)\n    setStatus(GameStatus.init)\n    setBody([initalPosition])\n    setFields(initFields(35, initalPosition))\n  }\n\n  const OnChangeDirection = useCallback((newDirection) => {\n    if (status !== GameStatus.playing) {\n      return direction\n    }\n    if (OppositeDirection[direction] === newDirection) {\n      return\n    }\n    setDirection(newDirection)\n  }, [direction, status])\n\n  const onChangeDifficulty = useCallback((difficulty) => {\n    if (status !== GameStatus.init) {\n      return\n    }\n    if (difficulty < 1 || difficulty > difficulty.length) {\n      return\n    }\n    setDifficulty(difficulty)\n  }, [status, difficulty])\n\n  useEffect(() => {\n    const handlekeyDown = (e) => {\n      const newDirection = DirectionkeyCodeMap[e.keyCode];\n      if (!newDirection) {\n        return;\n      }\n\n\n      OnChangeDirection(newDirection);\n\n    };\n    document.addEventListener('keydown', handlekeyDown);\n    return () => document.removeEventListener('keydown', handlekeyDown)\n  }, [OnChangeDirection])\n\n  const handleMoving = () => {\n    const { x, y } = body[0]\n    const delta = Delta[direction]\n    const newPosition = {\n      x: x + delta.x,\n      y: y + delta.y\n    }\n    if (isCollision(fields.length, newPosition) || isEatingMyself(fields, newPosition)) {\n      unsubscribe()\n      return false\n    }\n    const newBody = [...body]\n    if (fields[newPosition.y][newPosition.x] !== 'food') {\n      const removingTrack = newBody.pop()\n      fields[removingTrack.y][removingTrack.x] = ''\n    } else {\n      const food = getFoodPosition(fields.length, [...newBody, newPosition])\n      fields[food.y][food.x] = 'food'\n    }\n    fields[newPosition.y][newPosition.x] = 'snake'\n    newBody.unshift(newPosition)\n    setBody(newBody)\n    setFields(fields)\n    return true\n  }\n\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"header\">\n        <div className=\"title-container\">\n          <h1 className=\"title\">Snake Game</h1>\n        </div>\n        <Navigation length={body.length}\n          difficulty={difficulty}\n          onChangeDifficulty={onChangeDifficulty}\n        />\n      </header>\n      <main className=\"main\">\n        <Field fields={fields} />\n      </main>\n      <footer className=\"footer\">\n        <Button status={status}\n          onStop={onStop}\n          onStart={onStart}\n          onRestart={onRestart}\n        />\n\n        <ManipulationPanel onChange={OnChangeDirection} />\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}